#+TITLE: Documentation
#+OPTIONS: eval:never-export
#+PROPERTY: exports both
#+PROPERTY: results value
#+PROPERTY: session *julia-docs*
#+OPTIONS: tangle:test/doctests.jl
#+OPTIONS: author:nil
#+OPTIONS: title:nil
#+OPTIONS: email:nil
#+OPTIONS: timestamp:nil
#+OPTIONS: toc:yes
#+OPTIONS: html-doctype:html5

#+HTML_HEAD:  <link rel="shortcut icon" href="./favicon.ico" type="image/x-icon" /> 
#+HTML_HEAD: <meta charset='utf-8'>
#+HTML_HEAD: <meta http-equiv="X-UA-Compatible" content="chrome=1">
#+HTML_HEAD: <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
#+HTML_HEAD: <link href='https://fonts.googleapis.com/css?family=Architects+Daughter' rel='stylesheet' type='text/css'>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="stylesheets/stylesheet.css" media="screen" />
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="stylesheets/pygment_trac.css" media="screen" />
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="stylesheets/print.css" media="print" />

#+HTML_HEAD_EXTRA: <header>
#+HTML_HEAD_EXTRA:  <div class="inner">
#+HTML_HEAD_EXTRA:         <h1>WorldBankData.jl</h1>
#+HTML_HEAD_EXTRA:         <h2>WorldBankData package for Julia language</h2>
#+HTML_HEAD_EXTRA:         <a href="https://github.com/JuliaFinMetriX/WorldBankData.jl" class="button"><small>View project on</small>GitHub</a>
#+HTML_HEAD_EXTRA:       </div>
#+HTML_HEAD_EXTRA:     </header>


#+HTML_HEAD_EXTRA:     <div id="content-wrapper">
#+HTML_HEAD_EXTRA:       <div class="inner clearfix">
#+HTML_HEAD_EXTRA: <aside id="sidebar">
#+HTML_HEAD_EXTRA:    <a href="https://github.com/JuliaFinMetriX">
#+HTML_HEAD_EXTRA:    <img src="./logo.png" width="200" height="114">
#+HTML_HEAD_EXTRA:    </a>
#+HTML_HEAD_EXTRA:    <a href="https://github.com/JuliaFinMetriX/WorldBankData.jl/zipball/master" class="button">
#+HTML_HEAD_EXTRA:      <small>Download</small>
#+HTML_HEAD_EXTRA:      .zip file
#+HTML_HEAD_EXTRA:    </a>
#+HTML_HEAD_EXTRA:    <a href="https://github.com/JuliaFinMetriX/WorldBankData.jl/tarball/master" class="button">
#+HTML_HEAD_EXTRA:      <small>Download</small>
#+HTML_HEAD_EXTRA:      .tar.gz file
#+HTML_HEAD_EXTRA:    </a>
#+HTML_HEAD_EXTRA:     <p class="repo-owner"><a href="https://github.com/JuliaFinMetriX/WorldBankData.jl"></a> maintained by <a href="https://github.com/cgroll">cgroll</a>.</p>
#+HTML_HEAD_EXTRA:  </aside>
#+HTML_HEAD_EXTRA:         <section id="main-content">
#+HTML_HEAD_EXTRA:           <div>



#+BEGIN_COMMENT
Manual post-processing:
- removing the h1 title in the html. This is the second time that the
  word title occurs.  

- copy index.html file to gh-pages branch:
  - git checkout gh-pages
  - git checkout master index.html
  - git commit index.html
#+END_COMMENT

#+BEGIN_SRC julia :exports none :results output :tangle test/doctests.jl
module TestDocumentation

using Base.Test
using DataFrames
using TimeData

println("\n Running documentation tests\n")

#+END_SRC


* World Bank Data in Julia

As part of the World Bank's Open Data initiative, the World Bank
provides free access to their extensive database through their [[http://data.worldbank.org/developers/data-catalog-api][Data
Catalog API]]. This package uses this API to interactively access and
download World Bank data in Julia.

Similar to the [[http://cran.r-project.org/web/packages/WDI/index.html][WDI R package]], data can be downloaded using function
~wdi~. This function accepts indicators and countries as ~String~ or
~Array{String, 1}~. Thereby, countries must be given as World Bank's
iso2c code. Two additional ~Int~ inputs allow specifying beginning and
end of the data period, while keyword argument ~extra~ attaches
further country information like the capital, longitude, latitude,
income range, etc. to each observation. Output will be of type
~TimeData~ by default, but can be set to ~DataFrame~ through keyword
argument ~format~.

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
      using WorldBankData
#+END_SRC

#+RESULTS:

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
      
   ## single indicator, single country
   gnp = WorldBankData.wdi("NY.GNP.PCAP.CD", "BR")

   ## single indicator, multiple countries
   gnp = WorldBankData.wdi("NY.GNP.PCAP.CD", ["BR", "US", "DE"])

   ## multiple indicators, single country
   data = WorldBankData.wdi(["NY.GNP.PCAP.CD", "SP.DYN.LE00.IN"],
                            ["BR"])

   ## multiple indicators, multiple countries
   data = WorldBankData.wdi(["NY.GNP.PCAP.CD", "SP.DYN.LE00.IN"],
                            ["BR", "US", "DE"])

   ## same, but as DataFrame
   data = WorldBankData.wdi(["NY.GNP.PCAP.CD", "SP.DYN.LE00.IN"],
                            ["BR", "US", "DE"],
                            format = DataFrame)

   ## multiple indicators, multiple countries, additional information
   data = WorldBankData.wdi(["NY.GNP.PCAP.CD", "SP.DYN.LE00.IN"],
                            ["BR", "US", "DE"], extra = true)

   data[1:5, :]

#+END_SRC

#+RESULTS:
|        idx | iso2c | country | NY.GNP.PCAP.CD |   SP.DYN.LE00.IN | iso3c | name   | region                                        | regionId | capital  | longitude | latitude | income              | incomeId | lending | lendingId |
| 1960-12-31 | BR    | Brazil  |             NA | 54.6921463414634 | BRA   | Brazil | Latin America & Caribbean (all income levels) | LCN      | Brasilia |  -47.9292 | -15.7801 | Upper middle income | UMC      | IBRD    | IBD       |
| 1961-12-31 | BR    | Brazil  |             NA | 55.1696341463415 | BRA   | Brazil | Latin America & Caribbean (all income levels) | LCN      | Brasilia |  -47.9292 | -15.7801 | Upper middle income | UMC      | IBRD    | IBD       |
| 1962-12-31 | BR    | Brazil  |            230 | 55.6330975609756 | BRA   | Brazil | Latin America & Caribbean (all income levels) | LCN      | Brasilia |  -47.9292 | -15.7801 | Upper middle income | UMC      | IBRD    | IBD       |
| 1963-12-31 | BR    | Brazil  |            250 |            56.08 | BRA   | Brazil | Latin America & Caribbean (all income levels) | LCN      | Brasilia |  -47.9292 | -15.7801 | Upper middle income | UMC      | IBRD    | IBD       |
| 1964-12-31 | BR    | Brazil  |            270 | 56.5102926829268 | BRA   | Brazil | Latin America & Caribbean (all income levels) | LCN      | Brasilia |  -47.9292 | -15.7801 | Upper middle income | UMC      | IBRD    | IBD       |

* Indicator and country metadata

In addition to the indicator itself, the World Bank also provides a
lot of metadata for countries and indicators which can be downloaded
with functions ~get_countries~ and ~get_indicators~.

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
   countryData = get_countries()
   countryData[1:5, :]
#+END_SRC

#+RESULTS:
| iso3c | iso2c | name        | region                                        | regionId | capital    | longitude | latitude | income               | incomeId | lending        | lendingId |
| ABW   | AW    | Aruba       | Latin America & Caribbean (all income levels) | LCN      | Oranjestad |  -70.0167 |  12.5167 | High income: nonOECD | NOC      | Not classified | LNX       |
| AFG   | AF    | Afghanistan | South Asia                                    | SAS      | Kabul      |   69.1761 |  34.5228 | Low income           | LIC      | IDA            | IDX       |
| AFR   | A9    | Africa      | Aggregates                                    | NA       | NA         |        NA |       NA | Aggregates           | NA       | Aggregates     | NA        |
| AGO   | AO    | Angola      | Sub-Saharan Africa (all income levels)        | SSF      | Luanda     |    13.242 | -8.81155 | Upper middle income  | UMC      | IBRD           | IBD       |
| ALB   | AL    | Albania     | Europe & Central Asia (all income levels)     | ECS      | Tirane     |   19.8172 |  41.3317 | Upper middle income  | UMC      | IBRD           | IBD       |

Country metadata provides information for each country or aggregated
entity with respect to the following characteristics:

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
names(countryData)
#+END_SRC

#+RESULTS:
| iso3c     |
| iso2c     |
| name      |
| region    |
| regionId  |
| capital   |
| longitude |
| latitude  |
| income    |
| incomeId  |
| lending   |
| lendingId |

Overall, the country metadata is a ~DataFrame~ of the following size: 

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
size(countryData)
#+END_SRC

#+RESULTS:
| 262 |
|  12 |

Quite similarly, you can access the complete indicator metadata
through function ~get_indicators~.

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
indicatorData = get_indicators()
indicatorData[1:5, :]
#+END_SRC

#+RESULTS:
| indicator            | name                                     | description                                                                                                                | source_database | source_databaseId | source_organization                                                   |
| 1.0.HCount.1.25usd   | Poverty Headcount ($1.25 a day)          | The poverty headcount index measures the proportion of the population with daily per capita income below the poverty line. | LAC Equity Lab  |                37 | LAC Equity Lab tabulations of SEDLAC (CEDLAS and the World Bank).     |
| 1.0.HCount.10usd     | Under Middle Class ($10 a day) Headcount | The poverty headcount index measures the proportion of the population with daily per capita income below the poverty line. | LAC Equity Lab  |                37 | LAC Equity Lab tabulations of SEDLAC (CEDLAS and the World Bank).     |
| 1.0.HCount.2.5usd    | Poverty Headcount ($2.50 a day)          | The poverty headcount index measures the proportion of the population with daily per capita income below the poverty line. | LAC Equity Lab  |                37 | LAC Equity Lab tabulations of SEDLAC (CEDLAS and the World Bank).     |
| 1.0.HCount.Mid10to50 | Middle Class ($10-50 a day) Headcount    | The poverty headcount index measures the proportion of the population with daily per capita income below the poverty line. | LAC Equity Lab  |                37 | LAC Equity Lab tabulations of SEDLAC (CEDLAS and the World Bank).     |
| 1.0.HCount.Ofcl      | Official Moderate Poverty Rate-National  | The poverty headcount index measures the proportion of the population with daily per capita income below the poverty line. | LAC Equity Lab  |                37 | LAC Equity Lab tabulations of data from National Statistical Offices. |

The metadata contains information about each indicator regarding the
following characteristics:

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
names(indicatorData)
#+END_SRC

#+RESULTS:
| indicator           |
| name                |
| description         |
| source_database     |
| source_databaseId   |
| source_organization |

Just take a look at the size of this table in order to get an
impression about the huge amount of indicators that are provided by
the World Bank.

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
size(indicatorData)
#+END_SRC

#+RESULTS:
| 13074 |
|     6 |

You can use these two ~DataFrames~ of country and indicator metadata
to easily search for information through function ~search_wdi~. Before
looking at that, however, let's first spend a few words on downloading
/ caching of metadata.

On your first call of ~get_countries~ and ~get_indicators~ you will
download the respective information from the World Bank webpage.
However, as we have just seen, especially for indicators the metadata
is quite huge, so that we do not want to download it each time. Hence,
after the first download, ~get_countries~ and ~get_indicators~ will
automatically store the information two global variables:

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
   WorldBankData.country_cache[1:5, :]
#+END_SRC

#+RESULTS:
| iso3c | iso2c | name        | region                                        | regionId | capital    | longitude | latitude | income               | incomeId | lending        | lendingId |
| ABW   | AW    | Aruba       | Latin America & Caribbean (all income levels) | LCN      | Oranjestad |  -70.0167 |  12.5167 | High income: nonOECD | NOC      | Not classified | LNX       |
| AFG   | AF    | Afghanistan | South Asia                                    | SAS      | Kabul      |   69.1761 |  34.5228 | Low income           | LIC      | IDA            | IDX       |
| AFR   | A9    | Africa      | Aggregates                                    | NA       | NA         |        NA |       NA | Aggregates           | NA       | Aggregates     | NA        |
| AGO   | AO    | Angola      | Sub-Saharan Africa (all income levels)        | SSF      | Luanda     |    13.242 | -8.81155 | Upper middle income  | UMC      | IBRD           | IBD       |
| ALB   | AL    | Albania     | Europe & Central Asia (all income levels)     | ECS      | Tirane     |   19.8172 |  41.3317 | Upper middle income  | UMC      | IBRD           | IBD       |

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
   WorldBankData.indicator_cache[1:5, :]
#+END_SRC

#+RESULTS:
| indicator            | name                                     | description                                                                                                                | source_database | source_databaseId | source_organization                                                   |
| 1.0.HCount.1.25usd   | Poverty Headcount ($1.25 a day)          | The poverty headcount index measures the proportion of the population with daily per capita income below the poverty line. | LAC Equity Lab  |                37 | LAC Equity Lab tabulations of SEDLAC (CEDLAS and the World Bank).     |
| 1.0.HCount.10usd     | Under Middle Class ($10 a day) Headcount | The poverty headcount index measures the proportion of the population with daily per capita income below the poverty line. | LAC Equity Lab  |                37 | LAC Equity Lab tabulations of SEDLAC (CEDLAS and the World Bank).     |
| 1.0.HCount.2.5usd    | Poverty Headcount ($2.50 a day)          | The poverty headcount index measures the proportion of the population with daily per capita income below the poverty line. | LAC Equity Lab  |                37 | LAC Equity Lab tabulations of SEDLAC (CEDLAS and the World Bank).     |
| 1.0.HCount.Mid10to50 | Middle Class ($10-50 a day) Headcount    | The poverty headcount index measures the proportion of the population with daily per capita income below the poverty line. | LAC Equity Lab  |                37 | LAC Equity Lab tabulations of SEDLAC (CEDLAS and the World Bank).     |
| 1.0.HCount.Ofcl      | Official Moderate Poverty Rate-National  | The poverty headcount index measures the proportion of the population with daily per capita income below the poverty line. | LAC Equity Lab  |                37 | LAC Equity Lab tabulations of data from National Statistical Offices. |

Before the first download, both variables are simply set to ~false~. 

Hence, whenever you access country or indicator information after the
first call, you will actually access the information stored locally.
Still, however, you will download the data once per session.

However, sometimes there might sneak in some errors into the cached
data. In such a case, simply delete the current cache.

```julia
julia> clear_cache()
Cache has been cleared.
```


** Metadata caching

- cached: might be corrupted (problems with downloading process)
- cache can be clean
- alternatively: no download
- save to file, load from disk

* Searching

The most convenient way to explore indicators probably still is the
[[http://data.worldbank.org/indicator][World Bank webpage]], where you can easily use the search functionality
to find what your are looking for. Once you found the indicator of
interest, you can read off the indicator shortcut name (e.g.
SP.DYN.LE00.IN) from the URL of the indicator webpage.

Therefore, download country and indicator information, caching it. You
can then simply search in them

Alternatively, however, this package also contains functionality to
interactively search the database from Julia itself. 
~search_wdi~

The `search_wdi()` function internally caches the country and
indicator metadata and therefore downloads the country and indicator
data only once per session. Even that is usually not necessary. This
data can easily be stored on local disk.


The search function uses two DataFrames `country_cache` and
`indicator_cache` and searches through these. On the first search it
will download the data from the World Bank website. This takes much
longer for the larger indicators data. This only happens once per
session. After the first use the data is cached.

One can search for "countries" or "indicators" data.

To search the ~:name~ column of 

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
   res = search_wdi("countries", :name, r"united"i)
   res
#+END_SRC

#+RESULTS:
| iso3c | iso2c | name                 | region                                         | regionId | capital         | longitude | latitude | income               | incomeId | lending        | lendingId |
| ARE   | AE    | United Arab Emirates | Middle East & North Africa (all income levels) | MEA      | Abu Dhabi       |   54.3705 |  24.4764 | High income: nonOECD | NOC      | Not classified | LNX       |
| GBR   | GB    | United Kingdom       | Europe & Central Asia (all income levels)      | ECS      | London          | -0.126236 |  51.5002 | High income: OECD    | OEC      | Not classified | LNX       |
| USA   | US    | United States        | North America                                  | NAC      | Washington D.C. |   -77.032 |  38.8895 | High income: OECD    | OEC      | Not classified | LNX       |


Search for indicator by description

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
res = search_wdi("indicators", :description, r"gross national expenditure"i)
names(res)
#+END_SRC

#+RESULTS:
| indicator           |
| name                |
| description         |
| source_database     |
| source_databaseId   |
| source_organization |

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
res[:name]
#+END_SRC

#+RESULTS:
| Gross national expenditure deflator (base year varies by country) |
| Gross national expenditure (current US$)                          |
| Gross national expenditure (current LCU)                          |
| Gross national expenditure (constant 2005 US$)                    |
| Gross national expenditure (constant LCU)                         |
| Gross national expenditure (% of GDP)                             |

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
res[:indicator]
#+END_SRC

#+RESULTS:
| NE.DAB.DEFL.ZS |
| NE.DAB.TOTL.CD |
| NE.DAB.TOTL.CN |
| NE.DAB.TOTL.KD |
| NE.DAB.TOTL.KN |
| NE.DAB.TOTL.ZS |


Arguments:

The `search_wdi()` function has the following arguments
#+BEGIN_SRC julia :results value :tangle test/doctests.jl
function search_wdi(data_source, entry, regex)
#+END_SRC



The `data_source` is either `countries` or `indicators`. The entry is
one of the attributes (like name). The regex is the regular expression
to search for.


Note that the last argument to `search_wdi()` is a regular expression
denoted by `r"..."` and an `i` at the end means that it is case
insensitive.

"countries" can be searched for "name", "region", "capital", "iso2c",
"iso3c", "income", and "lending".

"indicators" can be searched for "name", "description", "topics",
"source_database", and "source_organization".

### Examples of country searches

```julia
#+BEGIN_SRC julia :results value :tangle test/doctests.jl
search_wdi("countries", :iso2c, r"TZ"i)
#+END_SRC

#+RESULTS:
| iso3c | iso2c | name     | region                                 | regionId | capital | longitude | latitude | income     | incomeId | lending | lendingId |
| TZA   | TZ    | Tanzania | Sub-Saharan Africa (all income levels) | SSF      | Dodoma  |   35.7382 | -6.17486 | Low income | LIC      | IDA     | IDX       |

julia> 
...

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
search_wdi("countries", :income, r"upper middle"i)[1:5, :]
#+END_SRC

#+RESULTS:
| iso3c | iso2c | name           | region                                        | regionId | capital      | longitude | latitude | income              | incomeId | lending        | lendingId |
| AGO   | AO    | Angola         | Sub-Saharan Africa (all income levels)        | SSF      | Luanda       |    13.242 | -8.81155 | Upper middle income | UMC      | IBRD           | IBD       |
| ALB   | AL    | Albania        | Europe & Central Asia (all income levels)     | ECS      | Tirane       |   19.8172 |  41.3317 | Upper middle income | UMC      | IBRD           | IBD       |
| ARG   | AR    | Argentina      | Latin America & Caribbean (all income levels) | LCN      | Buenos Aires |  -58.4173 | -34.6118 | Upper middle income | UMC      | IBRD           | IBD       |
| ASM   | AS    | American Samoa | East Asia & Pacific (all income levels)       | EAS      | Pago Pago    |  -170.691 | -14.2846 | Upper middle income | UMC      | Not classified | LNX       |
| AZE   | AZ    | Azerbaijan     | Europe & Central Asia (all income levels)     | ECS      | Baku         |   49.8932 |  40.3834 | Upper middle income | UMC      | IBRD           | IBD       |

julia> 
#+BEGIN_SRC julia :results value :tangle test/doctests.jl
search_wdi("countries", :region, r"Latin America"i)[1:5, :]
#+END_SRC

#+RESULTS:
| iso3c | iso2c | name                | region                                        | regionId | capital      | longitude | latitude | income               | incomeId | lending        | lendingId |
| ABW   | AW    | Aruba               | Latin America & Caribbean (all income levels) | LCN      | Oranjestad   |  -70.0167 |  12.5167 | High income: nonOECD | NOC      | Not classified | LNX       |
| ARG   | AR    | Argentina           | Latin America & Caribbean (all income levels) | LCN      | Buenos Aires |  -58.4173 | -34.6118 | Upper middle income  | UMC      | IBRD           | IBD       |
| ATG   | AG    | Antigua and Barbuda | Latin America & Caribbean (all income levels) | LCN      | Saint John's |  -61.8456 |  17.1175 | High income: nonOECD | NOC      | IBRD           | IBD       |
| BHS   | BS    | Bahamas, The        | Latin America & Caribbean (all income levels) | LCN      | Nassau       |   -77.339 |  25.0661 | High income: nonOECD | NOC      | Not classified | LNX       |
| BLZ   | BZ    | Belize              | Latin America & Caribbean (all income levels) | LCN      | Belmopan     |  -88.7713 |  17.2534 | Upper middle income  | UMC      | IBRD           | IBD       |

#+BEGIN_SRC julia :results value :tangle test/doctests.jl
   search_wdi("countries", :capital, r"^Ka"i)
#+END_SRC

#+RESULTS:
| iso3c | iso2c | name        | region                                 | regionId | capital   | longitude | latitude | income     | incomeId | lending | lendingId |
| AFG   | AF    | Afghanistan | South Asia                             | SAS      | Kabul     |   69.1761 |  34.5228 | Low income | LIC      | IDA     | IDX       |
| NPL   | NP    | Nepal       | South Asia                             | SAS      | Kathmandu |   85.3157 |  27.6939 | Low income | LIC      | IDA     | IDX       |
| UGA   | UG    | Uganda      | Sub-Saharan Africa (all income levels) | SSF      | Kampala   |   32.5729 | 0.314269 | Low income | LIC      | IDA     | IDX       |


julia> search_wdi("countries","lending",r"IBRD"i)
...

```

### Examples of indicator searches

```julia
julia> search_wdi("indicators","name",r"gross national expenditure"i)
...
julia> search_wdi("indicators","description",r"gross national expenditure"i)
...
julia> search_wdi("indicators","source_database",r"Sustainable"i)
...
julia> search_wdi("indicators","source_organization",r"Global Partnership"i)

```

## Tips and Tricks

### Extracting country data from results

```julia
df=wdi("NY.GNP.PCAP.CD", ["US","BR"], 1980, 2012, true)
indx=map(x-> x=="US", df["iso2c"])
indx=convert(DataArray{Bool,1}, indx)
us_gnp=df[indx,:]
```

### Plotting

```julia
using WorldBankData
using Winston

df=wdi("AG.LND.ARBL.HA.PC", "US", 1900, 2011)

plot(df["year"], df["AG.LND.ARBL.HA.PC"])
```

### Empty/Missing results

`wdi` will return an empty DataFrame without warning if there is no data:
```julia
julia> dfAS=wdi("EN.ATM.CO2E.KT", "AS")
download:
http://api.worldbank.org/countries/AS/indicators/EN.ATM.CO2E.KT?date=1800:3000&per_page=25000&format=json
0x4 DataFrame
```

It will return a DataFrame for the cases where it has data, i.e.

```julia
julia> df=wdi("EN.ATM.CO2E.KT", ["AS","US"])
download:
http://api.worldbank.org/countries/AS/indicators/EN.ATM.CO2E.KT?date=1800:3000&per_page=25000&format=json
download:
http://api.worldbank.org/countries/US/indicators/EN.ATM.CO2E.KT?date=1800:3000&per_page=25000&format=json
51x4 DataFrame
...
```


#### Metadata

The `search_wdi()` function internally caches the country and
indicator metadata and therefore downloads the country and indicator
data only once per session. Even that is usually not necessary. This
data can easily be stored on local disk.

Download and store the country and indicator information in csv files:

```julia
julia> using WorldBankData, DataFrames
julia> writetable("country_cache.csv",WorldBankData.get_countries())
julia> writetable("indicator_cache.csv", WorldBankData.get_indicators())
```

These can be used in the script to set the WorldBankData cache
variables `WorldBankData.country_cache` and
`WorldBankData.indicator_cache` (which are initialized to `false`)
using the `WorldBankData.set_country_cache()` and
`WorldBankData.set_indicator_cache()` functions:

```julia
using WorldBankData
using DataFrames
WorldBankData.set_country_cache(readtable("country_cache.csv"))
WorldBankData.set_indicator_cache(readtable("indicator_cache.csv"))
```

From then on the `search_wdi()` function will use the data read from
disk.

#### Indicator data

In a similar way the indicator data itself can be cached.
p
```julia
using WorldBankData
using DataFrames

function update_us_gnp_per_cap()
    df = wdi("NY.GNP.PCAP.CD", "US")
    writetable("us_gnp.csv",df)
end
df=readtable("us_gnp.csv")
```
one then runs the `update_us_gnp_per_cap()` function only when needed.

* Acknowledgement
